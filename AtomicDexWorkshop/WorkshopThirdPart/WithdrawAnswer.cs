// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var WithdrawAnswer = WithdrawAnswer.FromJson(jsonString);

using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace WorkshopThirdPart
{
    public partial class WithdrawAnswer
    {
        [JsonProperty("tx_hex")]
        public string TxHex { get; set; }

        [JsonProperty("tx_hash")]
        public string TxHash { get; set; }

        [JsonProperty("from")]
        public string[] From { get; set; }

        [JsonProperty("to")]
        public string[] To { get; set; }

        [JsonProperty("total_amount")]
        public string TotalAmount { get; set; }

        [JsonProperty("spent_by_me")]
        public string SpentByMe { get; set; }

        [JsonProperty("received_by_me")]
        public string ReceivedByMe { get; set; }

        [JsonProperty("my_balance_change")]
        public string MyBalanceChange { get; set; }

        [JsonProperty("block_height")]
        public long BlockHeight { get; set; }

        [JsonProperty("timestamp")]
        public long Timestamp { get; set; }

        [JsonProperty("fee_details")]
        public FeeDetails FeeDetails { get; set; }

        [JsonProperty("coin")]
        public string Coin { get; set; }

        [JsonProperty("internal_id")]
        public string InternalId { get; set; }
    }

    public partial class FeeDetails
    {
        [JsonProperty("amount")]
        public string Amount { get; set; }
    }

    public partial class WithdrawAnswer
    {
        public static WithdrawAnswer FromJson(string json) => JsonConvert.DeserializeObject<WithdrawAnswer>(json, Converter.Settings);
    }

    public static partial class Serialize
    {
        public static string ToJson(this WithdrawAnswer self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

}
